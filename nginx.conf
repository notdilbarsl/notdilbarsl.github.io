worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    upstream backend_servers {
        server notdilbarsl-github-io.onrender.com max_fails=3 fail_timeout=30s;
        server notdilbarsl-github-io-1.onrender.com max_fails=3 fail_timeout=30s;
    }

    server {
        listen 8080;

        # CORS headers for all requests
        set $cors_origin "https://notdilbarsl.github.io";

        # Leaderboard endpoint
        location /leaderboard {
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' $cors_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
                add_header 'Access-Control-Max-Age' 1728000;
                return 204;
            }

            proxy_pass http://backend_servers/leaderboard;
            proxy_set_header Host "notdilbarsl-github-io.onrender.com";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
            proxy_ssl_ciphers HIGH:!aNULL:!MD5;
            proxy_ssl_verify off;
            proxy_intercept_errors on;

            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

            error_page 301 307 502 504 = @secondary_leaderboard;
        }

        location @secondary_leaderboard {
            proxy_pass http://backend_servers/leaderboard;
            proxy_set_header Host "notdilbarsl-github-io-1.onrender.com";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        }

        # Submit-score endpoint
        location /submit-score {
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' $cors_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
                add_header 'Access-Control-Max-Age' 1728000;
                return 204;
            }

            proxy_pass http://backend_servers/submit-score;
            proxy_set_header Host "notdilbarsl-github-io.onrender.com";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
            proxy_ssl_ciphers HIGH:!aNULL:!MD5;
            proxy_ssl_verify off;
            proxy_intercept_errors on;

            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

            error_page 301 307 502 504 = @secondary_submit_score;
        }

        location @secondary_submit_score {
            proxy_pass http://backend_servers/submit-score;
            proxy_set_header Host "notdilbarsl-github-io-1.onrender.com";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        }
    }

    sendfile on;
    keepalive_timeout 65;
}
